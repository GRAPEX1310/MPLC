<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="A.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Код.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column12.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rlLxf3ohFspSjfUcAAAAAElFTkSuQmCC
</value>
  </data>
</root>